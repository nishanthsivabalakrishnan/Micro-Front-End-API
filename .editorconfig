[*.cs]

# S100: Methods and properties should be named in PascalCase 

dotnet_diagnostic.S100.severity = error 

  

# S1006: Method overrides should not change parameter defaults 

dotnet_diagnostic.S1006.severity = error 

  

# S101: Types should be named in PascalCase 

dotnet_diagnostic.S101.severity = error 

  

# S103: Lines should not be too long 

dotnet_diagnostic.S103.severity = warning 

  

# S104: Files should not have too many lines of code 

dotnet_diagnostic.S104.severity = error 

  

# S1048: Destructors should not throw exceptions 

dotnet_diagnostic.S1048.severity = error 

  

# S105: Tabulation characters should not be used 

dotnet_diagnostic.S105.severity = error 

  

# S106: Standard outputs should not be used directly to log anything 

dotnet_diagnostic.S106.severity = error 

  

# S1066: Collapsible "if" statements should be merged 

dotnet_diagnostic.S1066.severity = error 

  

# S1067: Expressions should not be too complex 

dotnet_diagnostic.S1067.severity = error 

  

# S107: Methods should not have too many parameters 

dotnet_diagnostic.S107.severity = error 

  

# S1075: URIs should not be hardcoded 

dotnet_diagnostic.S1075.severity = error 

  

# S108: Nested blocks of code should not be left empty 

dotnet_diagnostic.S108.severity = error 

  

# S109: Magic numbers should not be used 

dotnet_diagnostic.S109.severity = warning 

  

# S110: Inheritance tree of classes should not be too deep 

dotnet_diagnostic.S110.severity = warning 

  

# S1104: Fields should not have public accessibility 

dotnet_diagnostic.S1104.severity = error 

  

# S1109: A close curly brace should be located at the beginning of a line 

dotnet_diagnostic.S1109.severity = error 

  

# S1110: Redundant pairs of parentheses should be removed 

dotnet_diagnostic.S1110.severity = error 

  

# S1116: Empty statements should be removed 

dotnet_diagnostic.S1116.severity = error 

  

# S1117: Local variables should not shadow class fields 

dotnet_diagnostic.S1117.severity = warning 

  

# S1118: Utility classes should not have public constructors 

dotnet_diagnostic.S1118.severity = warning 

  

# S112: General exceptions should never be thrown 

dotnet_diagnostic.S112.severity = error 

  

# S1121: Assignments should not be made from within sub-expressions 

dotnet_diagnostic.S1121.severity = warning 

  

# S1123: "Obsolete" attributes should include explanations 

dotnet_diagnostic.S1123.severity = warning 

  

# S1125: Boolean literals should not be redundant 

dotnet_diagnostic.S1125.severity = error 

  

# S1128: Unused "using" should be removed 

dotnet_diagnostic.S1128.severity = warning 

  

# S113: Files should contain an empty newline at the end 

dotnet_diagnostic.S113.severity = error 

  

# S1134: Track uses of "FIXME" tags 

dotnet_diagnostic.S1134.severity = warning 

  

# S1135: Track uses of "TODO" tags 

dotnet_diagnostic.S1135.severity = warning 

  

# S1144: Unused private types or members should be removed 

dotnet_diagnostic.S1144.severity = error 

  

# S1145: Useless "if(true) {...}" and "if(false){...}" blocks should be removed 

dotnet_diagnostic.S1145.severity = error 

  

# S1147: Exit methods should not be called 

dotnet_diagnostic.S1147.severity = error 

  

# S1151: "switch case" clauses should not have too many lines of code 

dotnet_diagnostic.S1151.severity = error 

  

# S1155: "Any()" should be used to test for emptiness 

dotnet_diagnostic.S1155.severity = error 

  

# S1163: Exceptions should not be thrown in finally blocks 

dotnet_diagnostic.S1163.severity = error 

  

# S1172: Unused method parameters should be removed 

dotnet_diagnostic.S1172.severity = error 

  

# S1168: Empty arrays and collections should be returned instead of null 

dotnet_diagnostic.S1168.severity = error 

  

# S1185: Overriding members should do more than simply call the same member in the base class 

dotnet_diagnostic.S1185.severity = warning 

  

# S1186: Methods should not be empty 

dotnet_diagnostic.S1186.severity = error 

  

# S1192: String literals should not be duplicated 

dotnet_diagnostic.S1192.severity = warning 

  

# S1199: Nested code blocks should not be used 

dotnet_diagnostic.S1199.severity = error 

  

# S1200: Classes should not be coupled to too many other classes (Single Responsibility Principle) 

dotnet_diagnostic.S1200.severity = warning 

  

# S1206: "Equals(Object)" and "GetHashCode()" should be overridden in pairs 

dotnet_diagnostic.S1206.severity = warning 

  

# S121: Control structures should use curly braces 

dotnet_diagnostic.S121.severity = error 

  

# S1210: "Equals" and the comparison operators should be overridden when implementing "IComparable" 

dotnet_diagnostic.S1210.severity = error 

  

# S1215: "GC.Collect" should not be called 

dotnet_diagnostic.S1215.severity = warning 

  

# S122: Statements should be on separate lines 

dotnet_diagnostic.S122.severity = warning 

  

# S1226: Method parameters, caught exceptions and foreach variables' initial values should not be ignored 

dotnet_diagnostic.S1226.severity = error 

  

# S1227: break statements should not be used except for switch cases 

dotnet_diagnostic.S1227.severity = error 

  

# S1244: Floating point numbers should not be tested for equality 

dotnet_diagnostic.S1244.severity = warning 

  

# S125: Sections of code should not be commented out 

dotnet_diagnostic.S125.severity = warning 

  

# S126: "if ... else if" constructs should end with "else" clauses 

dotnet_diagnostic.S126.severity = error 

  

# S1264: A "while" loop should be used instead of a "for" loop 

dotnet_diagnostic.S1264.severity = error 

  

# S127: "for" loop stop conditions should be invariant 

dotnet_diagnostic.S127.severity = warning 

  

# S1301: "switch" statements should have at least 3 "case" clauses 

dotnet_diagnostic.S1301.severity = warning 

  

# S1309: Track uses of in-source issue suppressions 

dotnet_diagnostic.S1309.severity = error 

  

# S131: "switch/Select" statements should contain a "default/Case Else" clauses 

dotnet_diagnostic.S131.severity = warning 

  

# S134: Control flow statements "if", "switch", "for", "foreach", "while", "do"  and "try" should not be nested too deeply 

dotnet_diagnostic.S134.severity = error 

  

# S138: Functions should not have too many lines of code 

dotnet_diagnostic.S138.severity = warning 

  

# S1449: Culture should be specified for "string" operations 

dotnet_diagnostic.S1449.severity = error 

  

# S1451: Track lack of copyright and license headers 

dotnet_diagnostic.S1451.severity = warning 

  

# S1479: "switch" statements should not have too many "case" clauses 

dotnet_diagnostic.S1479.severity = warning 

  

# S1541: Methods and properties should not be too complex 

dotnet_diagnostic.S1541.severity = warning 

  

# S1656: Variables should not be self-assigned 

dotnet_diagnostic.S1656.severity = error 

  

# S1607: Tests should not be ignored 

dotnet_diagnostic.S1607.severity = warning 

  

# S1643: Strings should not be concatenated using '+' in a loop 

dotnet_diagnostic.S1643.severity = warning 

  

# S1659: Multiple variables should not be declared on the same line 

dotnet_diagnostic.S1659.severity = error 

  

# S1694: An abstract class should have both abstract and concrete methods 

dotnet_diagnostic.S1694.severity = warning 

  

# S1696: NullReferenceException should not be caught 

dotnet_diagnostic.S1696.severity = warning 

  

# S1697: Short-circuit logic should be used to prevent null pointer dereferences in conditionals 

dotnet_diagnostic.S1697.severity = warning 

  

# S1698: "==" should not be used when "Equals" is overridden 

dotnet_diagnostic.S1698.severity = warning 

  

# S1699: Constructors should only call non-overridable methods 

dotnet_diagnostic.S1699.severity = warning 

  

# S1751: Loops with at most one iteration should be refactored 

dotnet_diagnostic.S1751.severity = warning 

  

# S1764: Identical expressions should not be used on both sides of a binary operator 

dotnet_diagnostic.S1764.severity = warning 

  

# S1821: "switch" statements should not be nested 

dotnet_diagnostic.S1821.severity = warning 

  

# S1848: Objects should not be created to be dropped immediately without being used 

dotnet_diagnostic.S1848.severity = warning 

  

# S1854: Unused assignments should be removed 

dotnet_diagnostic.S1854.severity = warning 

  

# S1858: "ToString()" calls should not be redundant 

dotnet_diagnostic.S1858.severity = warning 

  

# S1862: Related "if/else if" statements should not have the same condition 

dotnet_diagnostic.S1862.severity = warning 

  

# S1871: Two branches in a conditional structure should not have exactly the same implementation 

dotnet_diagnostic.S1871.severity = warning 

  

# S1905: Redundant casts should not be used 

dotnet_diagnostic.S1905.severity = warning 

  

# S1939: Inheritance list should not be redundant 

dotnet_diagnostic.S1939.severity = warning 

  

# S1940: Boolean checks should not be inverted 

dotnet_diagnostic.S1940.severity = warning 

  

# S1944: Inappropriate casts should not be made 

dotnet_diagnostic.S1944.severity = warning 

  

# S1994: "for" loop increment clauses should modify the loops' counters 

dotnet_diagnostic.S1994.severity = warning 

  

# S2053: Hashes should include an unpredictable salt 

dotnet_diagnostic.S2053.severity = warning 

  

# S2070: SHA-1 and Message-Digest hash algorithms should not be used in secure contexts 

dotnet_diagnostic.S2070.severity = warning 

  

# S2114: Collections should not be passed as arguments to their own methods 

dotnet_diagnostic.S2114.severity = warning 

  

# S2123: Values should not be uselessly incremented 

dotnet_diagnostic.S2123.severity = warning 

  

# S2148: Underscores should be used to make large numbers readable 

dotnet_diagnostic.S2148.severity = warning 

  

# S2156: "sealed" classes should not have "protected" members 

dotnet_diagnostic.S2156.severity = warning 

  

# S2178: Short-circuit logic should be used in boolean contexts 

dotnet_diagnostic.S2178.severity = warning 

  

# S2183: Integral numbers should not be shifted by zero or more than their number of bits-1 

dotnet_diagnostic.S2183.severity = warning 

  

# S2184: Results of integer division should not be assigned to floating point variables 

dotnet_diagnostic.S2184.severity = warning 

  

# S2187: TestCases should contain tests 

dotnet_diagnostic.S2187.severity = warning 

  

# S2190: Recursion should not be infinite 

dotnet_diagnostic.S2190.severity = warning 

  

# S2197: Modulus results should not be checked for direct equality 

dotnet_diagnostic.S2197.severity = warning 

  

# S2201: Return values from functions without side effects should not be ignored 

dotnet_diagnostic.S2201.severity = warning 

  

# S2219: Runtime type checking should be simplified 

dotnet_diagnostic.S2219.severity = warning 

  

# S2221: "Exception" should not be caught when not required by called methods 

dotnet_diagnostic.S2221.severity = warning 

  

# S2223: Non-constant static fields should not be visible 

dotnet_diagnostic.S2223.severity = warning 

  

# S2225: "ToString()" method should not return null 

dotnet_diagnostic.S2225.severity = warning 

  

# S2228: Console logging should not be used 

dotnet_diagnostic.S2228.severity = warning 

  

# S2234: Parameters should be passed in the correct order 

dotnet_diagnostic.S2234.severity = warning 

  

# S2251: A "for" loop update clause should move the counter in the right direction 

dotnet_diagnostic.S2251.severity = warning 

  

# S2252: For-loop conditions should be true at least once 

dotnet_diagnostic.S2252.severity = warning 

  

# S2259: Null pointers should not be dereferenced 

dotnet_diagnostic.S2259.severity = warning 

  

# S2275: Composite format strings should not lead to unexpected behavior at runtime 

dotnet_diagnostic.S2275.severity = warning 

  

# S2278: Neither DES (Data Encryption Standard) nor DESede (3DES) should be used 

dotnet_diagnostic.S2278.severity = warning 

  

# S2290: Field-like events should not be virtual 

dotnet_diagnostic.S2290.severity = warning 

  

# S2292: Trivial properties should be auto-implemented 

dotnet_diagnostic.S2292.severity = warning 

  

# S2291: Overflow checking should not be disabled for "Enumerable.Sum" 

dotnet_diagnostic.S2291.severity = warning 

  

# S2302: "nameof" should be used 

dotnet_diagnostic.S2302.severity = warning 

  

# S2306: "async" and "await" should not be used as identifiers 

dotnet_diagnostic.S2306.severity = warning 

  

# S2325: Methods and properties that don't access instance data should be static 

dotnet_diagnostic.S2325.severity = warning 

  

# S2326: Unused type parameters should be removed 

dotnet_diagnostic.S2326.severity = warning 

  

# S2327: "try" statements with identical "catch" and/or "finally" blocks should be merged 

dotnet_diagnostic.S2327.severity = warning 

  

# S2328: "GetHashCode" should not reference mutable fields 

dotnet_diagnostic.S2328.severity = warning 

  

# S2330: Array covariance should not be used 

dotnet_diagnostic.S2330.severity = warning 

  

# S2333: Redundant modifiers should not be used 

dotnet_diagnostic.S2333.severity = warning 

  

# S2339: Public constant members should not be used 

dotnet_diagnostic.S2339.severity = warning 

  

# S2342: Enumeration types should comply with a naming convention 

dotnet_diagnostic.S2342.severity = warning 

  

# S2344: Enumeration type names should not have "Flags" or "Enum" suffixes 

dotnet_diagnostic.S2344.severity = warning 

  

# S2345: Flags enumerations should explicitly initialize all their members 

dotnet_diagnostic.S2345.severity = warning 

  

# S2346: Flags enumerations zero-value members should be named "None" 

dotnet_diagnostic.S2346.severity = warning 

  

# S2357: Fields should be private 

dotnet_diagnostic.S2357.severity = warning 

  

# S2360: Optional parameters should not be used 

dotnet_diagnostic.S2360.severity = warning 

  

# S2365: Properties should not make collection or array copies 

dotnet_diagnostic.S2365.severity = warning 

  

# S2368: Public methods should not have multidimensional array parameters 

dotnet_diagnostic.S2368.severity = warning 

  

# S2372: Exceptions should not be thrown from property getters 

dotnet_diagnostic.S2372.severity = warning 

  

# S2376: Write-only properties should not be used 

dotnet_diagnostic.S2376.severity = warning 

  

# S2386: Mutable fields should not be "public static" 

dotnet_diagnostic.S2386.severity = warning 

  

# S2387: Child class fields should not shadow parent class fields 

dotnet_diagnostic.S2387.severity = warning 

  

# S2436: Types and methods should not have too many generic parameters 

dotnet_diagnostic.S2436.severity = warning 

  

# S2437: Silly bit operations should not be performed 

dotnet_diagnostic.S2437.severity = warning 

  

# S2479: Whitespace and control characters in string literals should be explicit 

dotnet_diagnostic.S2479.severity = warning 

  

# S2486: Generic exceptions should not be ignored 

dotnet_diagnostic.S2486.severity = warning 

  

# S2551: Shared resources should not be used for locking 

dotnet_diagnostic.S2551.severity = warning 

  

# S2583: Conditionally executed code should be reachable 

dotnet_diagnostic.S2583.severity = warning 

  

# S2589: Boolean expressions should not be gratuitous 

dotnet_diagnostic.S2589.severity = warning 

  

# S2674: The length returned from a stream read should be checked 

dotnet_diagnostic.S2674.severity = warning 

  

# S2681: Multiline blocks should be enclosed in curly braces 

dotnet_diagnostic.S2681.severity = warning 

  

# S2688: "NaN" should not be used in comparisons 

dotnet_diagnostic.S2688.severity = warning 

  

# S2692: "IndexOf" checks should not be for positive numbers 

dotnet_diagnostic.S2692.severity = warning 

  

# S2696: Instance members should not write to "static" fields 

dotnet_diagnostic.S2696.severity = warning 

  

# S2699: Tests should include assertions 

dotnet_diagnostic.S2699.severity = warning 

  

# S2701: Literal boolean values should not be used in assertions 

dotnet_diagnostic.S2701.severity = warning 

  

# S2737: "catch" clauses should do more than rethrow 

dotnet_diagnostic.S2737.severity = warning 

  

# S2743: Static fields should not be used in generic types 

dotnet_diagnostic.S2743.severity = warning 

  

# S2755: XML parsers should not be vulnerable to XXE attacks 

dotnet_diagnostic.S2755.severity = warning 

  

# S2757: "=+" should not be used instead of "+=" 

dotnet_diagnostic.S2757.severity = warning 

  

# S2758: The ternary operator should not return the same value regardless of the condition 

dotnet_diagnostic.S2758.severity = warning 

  

# S2760: Sequential tests should not check the same condition 

dotnet_diagnostic.S2760.severity = warning 

  

# S2761: Doubled prefix operators "!!" and "~~" should not be used 

dotnet_diagnostic.S2761.severity = warning 

  

# S2857: SQL keywords should be delimited by whitespace 

dotnet_diagnostic.S2857.severity = warning 

  

# S2930: "IDisposables" should be disposed 

dotnet_diagnostic.S2930.severity = warning 

  

# S2931: Classes with "IDisposable" members should implement "IDisposable" 

dotnet_diagnostic.S2931.severity = warning 

  

# S2933: Fields that are only assigned in the constructor should be "readonly" 

dotnet_diagnostic.S2933.severity = warning 

  

# S2934: Property assignments should not be made for "readonly" fields not constrained to reference types 

dotnet_diagnostic.S2934.severity = warning 

  

# S2952: Classes should "Dispose" of members from the classes' own "Dispose" methods 

dotnet_diagnostic.S2952.severity = warning 

  

# S2953: Methods named "Dispose" should implement "IDisposable.Dispose" 

dotnet_diagnostic.S2953.severity = warning 

  

# S907: "goto" statement should not be used 

dotnet_diagnostic.S907.severity = warning 

# IDE0005: Using directive is unnecessary.
dotnet_diagnostic.IDE0005.severity = warning

# IDE0058: Expression value is never used
dotnet_diagnostic.IDE0058.severity = none
